{
  
    
        "post0": {
            "title": "Hours Of Sleep",
            "content": "How many hours of sleep do children get? . Savvysleeper.com surveyed 1,000 parents on their children&#39;s sleeping pattern. They found out that on average none of the grades from Kindergarten to 12th grade meets the CDC&#39;s recommendation of 9 to 12 hours of sleep for 6- to 12-year olds and 8 to 10 hours of sleep for 13- to 18-year olds. . Source: https://savvysleeper.org/costing-kids-sleep/ . bar1 = (alt.Chart(df).mark_bar(fill=&#39;white&#39;, stroke=&#39;#376c94&#39;).encode( alt.X(&#39;Value:Q&#39;), alt.Y(&#39;Grade:N&#39;, sort=[ &#39;Kindergarten&#39;, &#39;First grade&#39;, &#39;Second grade&#39;, &#39;Third grade&#39;, &#39;Fourth grade&#39;, &#39;Fifth grade&#39;, &#39;Sixth grade&#39;, &#39;Seventh grade&#39;, &#39;Eighth grade&#39;, &#39;Ninth grade&#39;, &#39;10th grade&#39;, &#39;11th grade&#39;, &#39;12th grade&#39; ]), tooltip = [&#39;Grade&#39;, &#39;Value&#39;]).transform_filter( alt.FieldEqualPredicate(field=&#39;Category&#39;, equal=&#39;Hours Needed&#39;))) bar2 = (alt.Chart(df).mark_bar(color=&#39;#376c94&#39;).encode( alt.X(&#39;Value:Q&#39;, title=&quot;Hours of sleep&quot;), alt.Y(&#39;Grade:N&#39;, title=None, sort=[ &#39;Kindergarten&#39;, &#39;First grade&#39;, &#39;Second grade&#39;, &#39;Third grade&#39;, &#39;Fourth grade&#39;, &#39;Fifth grade&#39;, &#39;Sixth grade&#39;, &#39;Seventh grade&#39;, &#39;Eighth grade&#39;, &#39;Ninth grade&#39;, &#39;10th grade&#39;, &#39;11th grade&#39;, &#39;12th grade&#39; ]), tooltip = [&#39;Grade&#39;, &#39;Value&#39;]).transform_filter( alt.FieldEqualPredicate(field=&#39;Category&#39;, equal=&#39;Hours Averaged&#39;))) (bar1 + bar2).configure_axis(grid=False).properties( title={ &quot;text&quot;: &quot;How many hours of sleep do children get?&quot;, &quot;subtitle&quot;: &quot;Blue: hours averaged | White: hours needed&quot; }).configure_view( strokeOpacity=0).configure_axisY( # left aligns y-axis labels titleAngle=0, titleY=-10, titleX=-60, labelPadding=90, labelAlign=&#39;left&#39;) .",
            "url": "https://lb930.github.io/Data-Science-Blog/makeovermonday/altair/python/visualisation/2020/05/26/Hours-of-Sleep.html",
            "relUrl": "/makeovermonday/altair/python/visualisation/2020/05/26/Hours-of-Sleep.html",
            "date": " • May 26, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Music Industry Sales",
            "content": "40 Years of Music Industry Sales . The record industry has seen a lot of change over the years. . 8-tracks took a short-lived run at the dominance of vinyl, cassettes faded away as compact discs took the world by storm, and through it all, the music industry saw its revenue continue to climb. That is, until it was digitally disrupted. . Looking back at four decades of U.S. music industry sales data is a fascinating exercise as it charts not only the rise and fall the record company profits, but seismic shifts in technology and consumer behavior as well. . Sources: https://www.visualcapitalist.com/music-industry-sales/, https://www.riaa.com/u-s-sales-database/ . selection = alt.selection_multi(fields=[&quot;Format group&quot;], bind=&quot;legend&quot;) chart = alt.Chart(df).mark_area().configure_axis(grid=False).properties( title=&quot;40 Years of Music Industry Sales&quot; ).encode( alt.X(&quot;yearmonth(Year):T&quot;, title=&quot;&quot;, axis=alt.Axis(format=&quot;%Y&quot;, domain=False, tickSize=0)), alt.Y(&quot;sum(Value):Q&quot;, stack=&quot;center&quot;, axis=None), alt.Color( &quot;Format group:N&quot;, scale=alt.Scale( domain=[ &quot;8 - Track&quot;, &quot;CD&quot;, &quot;Vinyl&quot;, &quot;Tape&quot;, &quot;Other&quot;, &quot;Download&quot;, &quot;Stream&quot;, ], range=[&quot;#423e58&quot;, &quot;#d3587b&quot;, &quot;#6a3589&quot;, &quot;#9b478b&quot;, &quot;#ffae78&quot;, &quot;#f78972&quot;, &quot;#fbcd98&quot;], ), ), tooltip=[&quot;Format group&quot;, &quot;sum(Value):Q&quot;, &quot;year(Year):T&quot;], opacity=alt.condition(selection, alt.value(1), alt.value(0.2)), ).add_selection(selection) chart .",
            "url": "https://lb930.github.io/Data-Science-Blog/makeovermonday/altair/python/visualisation/2020/05/25/Music-Industry-Sales.html",
            "relUrl": "/makeovermonday/altair/python/visualisation/2020/05/25/Music-Industry-Sales.html",
            "date": " • May 25, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "Car Insurance",
            "content": "Car Insurance . Sources: https://www.valuepenguin.com/average-cost-of-insurance Full script: https://github.com/lb930/Data-Visualisation/tree/master/MakeoverMonday/MM%20W20-2020%20Car%20Insurance . # Highlight action selection = alt.selection_single(fields=[&quot;State&quot;]) # Highlight condition color1 = alt.condition(selection, alt.value(&quot;#e86f6f&quot;), alt.value(&quot;lightgray&quot;)) # Full coverage bar chart full_coverage = ( alt.Chart(df) .mark_bar(size = 14) # Changes the size of the individual bars .encode( x=alt.X(&quot;Full coverage&quot;, axis=None), # removes the x-axis y=alt.Y(&quot;State&quot;, sort=&quot;-x&quot;, title=&quot;&quot;), tooltip=[&quot;State&quot;, &quot;Full coverage&quot;], color=color1, # add the highlight condition ) ) # Full coverage labels full_coverage_text = full_coverage.mark_text( align=&quot;left&quot;, baseline=&quot;middle&quot;, dx=3, # Nudges text to right so it doesn&#39;t appear on top of the bar ).encode(text=&quot;Full cov $:N&quot;) # Minimum coverage bar chart min_coverage = ( alt.Chart(df) .mark_bar(size = 14) .encode( x=alt.X(&quot;Minimum coverage&quot;, axis=None), y=alt.Y(&quot;State&quot;, sort=&quot;-x&quot;, title=&quot;&quot;), # Removes the &quot;State&quot; field label tooltip=[&quot;State&quot;, &quot;Minimum coverage&quot;], color=color1, ) ) # Minimum coverage labels min_coverage_text = min_coverage.mark_text( align=&quot;left&quot;, baseline=&quot;middle&quot;, dx=3, ).encode(text=&quot;Min cov $:N&quot;) # Displays the two charts next to each other chart = alt.hconcat( (full_coverage + full_coverage_text) # Adds bars and labels .add_selection(selection) # Binds the highlighting action .properties(title=&quot;Full coverage&quot;), # Adds a title (min_coverage + min_coverage_text) .add_selection(selection) .properties(title=&quot;Minimum coverage&quot;), ).configure_axis(grid=False).configure_view(strokeOpacity=0).resolve_scale( # Removes grid lines and uses the same x axis scale for both charts x=&quot;shared&quot; ).properties( title=&quot;Cost of car insurance by state&quot; ).configure_title( anchor=&quot;start&quot;, fontSize=14 ).configure_axisY( # left aligns y-axis labels titleAngle=0, titleY=-10, titleX=-60, labelPadding=160, labelAlign=&#39;left&#39; ) chart .",
            "url": "https://lb930.github.io/Data-Science-Blog/makeovermonday/altair/python/visualisation/2020/05/24/Car-Insurance.html",
            "relUrl": "/makeovermonday/altair/python/visualisation/2020/05/24/Car-Insurance.html",
            "date": " • May 24, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://lb930.github.io/Data-Science-Blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://lb930.github.io/Data-Science-Blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}